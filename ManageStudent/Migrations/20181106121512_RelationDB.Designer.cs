// <auto-generated />
using System;
using ManageStudent.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ManageStudent.Migrations
{
    [DbContext(typeof(ManageStudentContext))]
    [Migration("20181106121512_RelationDB")]
    partial class RelationDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ManageStudent.Models.Mark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StudentRollNumber");

                    b.Property<int>("SubjectMark");

                    b.Property<string>("SubjectName");

                    b.HasKey("Id");

                    b.HasIndex("StudentRollNumber");

                    b.ToTable("Mark");

                    b.HasData(
                        new { Id = 1, StudentRollNumber = "A00001", SubjectMark = 24, SubjectName = "Java" },
                        new { Id = 2, StudentRollNumber = "A00001", SubjectMark = 23, SubjectName = "C#" },
                        new { Id = 3, StudentRollNumber = "A00001", SubjectMark = 27, SubjectName = "Python" }
                    );
                });

            modelBuilder.Entity("ManageStudent.Models.Student", b =>
                {
                    b.Property<string>("RollNumber")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<int>("Gender");

                    b.Property<string>("LastName");

                    b.Property<int>("Status");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("RollNumber");

                    b.ToTable("Student");

                    b.HasData(
                        new { RollNumber = "A00001", CreatedAt = new DateTime(2018, 11, 6, 19, 15, 12, 473, DateTimeKind.Local), Email = "quanghungleo@gmail.com", FirstName = "Hung", Gender = 1, LastName = "Nguyen", Status = 1, UpdatedAt = new DateTime(2018, 11, 6, 19, 15, 12, 478, DateTimeKind.Local) },
                        new { RollNumber = "A00002", CreatedAt = new DateTime(2018, 11, 6, 19, 15, 12, 480, DateTimeKind.Local), Email = "quanghungleo@gmail.com", FirstName = "Hung", Gender = 1, LastName = "Nguyen", Status = 1, UpdatedAt = new DateTime(2018, 11, 6, 19, 15, 12, 480, DateTimeKind.Local) },
                        new { RollNumber = "A00003", CreatedAt = new DateTime(2018, 11, 6, 19, 15, 12, 480, DateTimeKind.Local), Email = "quanghungleo@gmail.com", FirstName = "Hung", Gender = 1, LastName = "Nguyen", Status = 1, UpdatedAt = new DateTime(2018, 11, 6, 19, 15, 12, 480, DateTimeKind.Local) }
                    );
                });

            modelBuilder.Entity("ManageStudent.Models.Mark", b =>
                {
                    b.HasOne("ManageStudent.Models.Student", "Student")
                        .WithMany("Marks")
                        .HasForeignKey("StudentRollNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
